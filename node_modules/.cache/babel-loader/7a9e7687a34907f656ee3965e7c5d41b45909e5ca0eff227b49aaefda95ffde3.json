{"ast":null,"code":"// src/utils/openai.js\nexport async function generateMCQs(config) {\n  const {\n    topics,\n    questionCount,\n    difficulty,\n    type\n  } = config;\n  console.log(\"üîß generateMCQs called with config:\", config);\n  const prompt = `\nGenerate a JSON array of ${questionCount} MCQs about the following topics: ${topics}.\nDifficulty level: ${difficulty}.\nQuestion type: ${type === \"single\" ? \"Single correct\" : \"Multiple correct\"} answer.\n\nEach question object should have:\n- \"questionText\" (string)\n- \"options\" (array of strings)\n- \"correctAnswers\" (array of strings)\n\nRespond ONLY with valid JSON.\n`;\n  const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n    },\n    body: JSON.stringify({\n      model: \"gpt-4o\",\n      messages: [{\n        role: \"user\",\n        content: prompt\n      }],\n      temperature: 0.7\n    })\n  });\n  if (!res.ok) {\n    const errorText = await res.text();\n    console.error(\"‚ùå OpenAI API Error:\", errorText);\n    throw new Error(\"OpenAI API request failed\");\n  }\n  const data = await res.json();\n  const content = data.choices[0].message.content.trim();\n  console.log(\"üì• OpenAI returned content:\", content);\n  return content;\n}","map":{"version":3,"names":["generateMCQs","config","topics","questionCount","difficulty","type","console","log","prompt","res","fetch","method","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","messages","role","content","temperature","ok","errorText","text","error","Error","data","json","choices","message","trim"],"sources":["C:/Users/gaura/mock-test-generator/src/utils/openai.js"],"sourcesContent":["// src/utils/openai.js\r\nexport async function generateMCQs(config) {\r\n  const { topics, questionCount, difficulty, type } = config;\r\n  console.log(\"üîß generateMCQs called with config:\", config);\r\n\r\n  const prompt = `\r\nGenerate a JSON array of ${questionCount} MCQs about the following topics: ${topics}.\r\nDifficulty level: ${difficulty}.\r\nQuestion type: ${type === \"single\" ? \"Single correct\" : \"Multiple correct\"} answer.\r\n\r\nEach question object should have:\r\n- \"questionText\" (string)\r\n- \"options\" (array of strings)\r\n- \"correctAnswers\" (array of strings)\r\n\r\nRespond ONLY with valid JSON.\r\n`;\r\n\r\n  const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\r\n    },\r\n    body: JSON.stringify({\r\n      model: \"gpt-4o\",\r\n      messages: [{ role: \"user\", content: prompt }],\r\n      temperature: 0.7,\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const errorText = await res.text();\r\n    console.error(\"‚ùå OpenAI API Error:\", errorText);\r\n    throw new Error(\"OpenAI API request failed\");\r\n  }\r\n\r\n  const data = await res.json();\r\n  const content = data.choices[0].message.content.trim();\r\n  console.log(\"üì• OpenAI returned content:\", content);\r\n  return content;\r\n}\r\n\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,YAAYA,CAACC,MAAM,EAAE;EACzC,MAAM;IAAEC,MAAM;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAGJ,MAAM;EAC1DK,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEN,MAAM,CAAC;EAE1D,MAAMO,MAAM,GAAG;AACjB,2BAA2BL,aAAa,qCAAqCD,MAAM;AACnF,oBAAoBE,UAAU;AAC9B,iBAAiBC,IAAI,KAAK,QAAQ,GAAG,gBAAgB,GAAG,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EAEC,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;IACpEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUC,OAAO,CAACC,GAAG,CAACC,wBAAwB;IAC/D,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAE,QAAQ;MACfC,QAAQ,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEf;MAAO,CAAC,CAAC;MAC7CgB,WAAW,EAAE;IACf,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACf,GAAG,CAACgB,EAAE,EAAE;IACX,MAAMC,SAAS,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,CAAC;IAClCrB,OAAO,CAACsB,KAAK,CAAC,qBAAqB,EAAEF,SAAS,CAAC;IAC/C,MAAM,IAAIG,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,MAAMC,IAAI,GAAG,MAAMrB,GAAG,CAACsB,IAAI,CAAC,CAAC;EAC7B,MAAMR,OAAO,GAAGO,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACV,OAAO,CAACW,IAAI,CAAC,CAAC;EACtD5B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEgB,OAAO,CAAC;EACnD,OAAOA,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}