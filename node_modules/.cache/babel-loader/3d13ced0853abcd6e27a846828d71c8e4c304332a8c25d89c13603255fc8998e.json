{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\mock-test-generator\\\\src\\\\pages\\\\ResultPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ResultPanel from \"../components/ResultPanel\";\nimport Analytics from \"../components/Analytics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultPage() {\n  _s();\n  const navigate = useNavigate();\n  const [resultData, setResultData] = useState(null);\n  const [score, setScore] = useState(0);\n  const [maxScore, setMaxScore] = useState(0);\n  const [topicAccuracy, setTopicAccuracy] = useState({});\n  useEffect(() => {\n    const stored = localStorage.getItem(\"mockResult\");\n    if (!stored) {\n      alert(\"No result data found. Redirecting to home.\");\n      navigate(\"/\");\n      return;\n    }\n    const data = JSON.parse(stored);\n    setResultData(data);\n  }, [navigate]);\n  useEffect(() => {\n    if (!resultData) return;\n    let correctCount = 0;\n    let total = 0;\n    const topicWise = {};\n\n    // Assuming topics are comma separated in config\n    const topics = resultData.config.topics.split(\",\").map(t => t.trim().toLowerCase());\n    for (let i = 0; i < resultData.questions.length; i++) {\n      const q = resultData.questions[i];\n      const userAns = resultData.answers[i] || [];\n      total++;\n\n      // question.correctAnswers assumed as array\n      const correctAnswers = q.correctAnswers || [];\n\n      // Check answer correctness\n      const isCorrect = resultData.config.type === \"single\" ? userAns[0] === correctAnswers[0] : arraysEqualIgnoringOrder(userAns, correctAnswers);\n      if (isCorrect) correctCount++;\n\n      // Assign all topics to each question for now\n      topics.forEach(topic => {\n        if (!topicWise[topic]) topicWise[topic] = {\n          correct: 0,\n          total: 0\n        };\n        topicWise[topic].total++;\n        if (isCorrect) topicWise[topic].correct++;\n      });\n    }\n    setScore(correctCount);\n    setMaxScore(total);\n\n    // Compute topic-wise accuracy %\n    const topicAcc = {};\n    for (const t in topicWise) {\n      topicAcc[t] = (topicWise[t].correct / topicWise[t].total * 100).toFixed(1);\n    }\n    setTopicAccuracy(topicAcc);\n  }, [resultData]);\n  function arraysEqualIgnoringOrder(a, b) {\n    if (a.length !== b.length) return false;\n    const sortedA = [...a].sort();\n    const sortedB = [...b].sort();\n    return sortedA.every((val, idx) => val === sortedB[idx]);\n  }\n  if (!resultData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5\",\n      children: \"Loading results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"\\uD83D\\uDCCA Test Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultPanel, {\n      score: score,\n      maxScore: maxScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {\n      topicAccuracy: topicAccuracy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => navigate(\"/\"),\n      children: \"\\uD83D\\uDD04 Retake Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultPage, \"dV6TXrQwTnCZNgSMpbB5ufARSsY=\", false, function () {\n  return [useNavigate];\n});\n_c = ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ResultPanel","Analytics","jsxDEV","_jsxDEV","ResultPage","_s","navigate","resultData","setResultData","score","setScore","maxScore","setMaxScore","topicAccuracy","setTopicAccuracy","stored","localStorage","getItem","alert","data","JSON","parse","correctCount","total","topicWise","topics","config","split","map","t","trim","toLowerCase","i","questions","length","q","userAns","answers","correctAnswers","isCorrect","type","arraysEqualIgnoringOrder","forEach","topic","correct","topicAcc","toFixed","a","b","sortedA","sort","sortedB","every","val","idx","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/mock-test-generator/src/pages/ResultPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ResultPanel from \"../components/ResultPanel\";\r\nimport Analytics from \"../components/Analytics\";\r\n\r\nexport default function ResultPage() {\r\n  const navigate = useNavigate();\r\n  const [resultData, setResultData] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [maxScore, setMaxScore] = useState(0);\r\n  const [topicAccuracy, setTopicAccuracy] = useState({});\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"mockResult\");\r\n    if (!stored) {\r\n      alert(\"No result data found. Redirecting to home.\");\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n    const data = JSON.parse(stored);\r\n    setResultData(data);\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (!resultData) return;\r\n\r\n    let correctCount = 0;\r\n    let total = 0;\r\n    const topicWise = {};\r\n\r\n    // Assuming topics are comma separated in config\r\n    const topics = resultData.config.topics\r\n      .split(\",\")\r\n      .map((t) => t.trim().toLowerCase());\r\n\r\n    for (let i = 0; i < resultData.questions.length; i++) {\r\n      const q = resultData.questions[i];\r\n      const userAns = resultData.answers[i] || [];\r\n      total++;\r\n\r\n      // question.correctAnswers assumed as array\r\n      const correctAnswers = q.correctAnswers || [];\r\n\r\n      // Check answer correctness\r\n      const isCorrect =\r\n        resultData.config.type === \"single\"\r\n          ? userAns[0] === correctAnswers[0]\r\n          : arraysEqualIgnoringOrder(userAns, correctAnswers);\r\n\r\n      if (isCorrect) correctCount++;\r\n\r\n      // Assign all topics to each question for now\r\n      topics.forEach((topic) => {\r\n        if (!topicWise[topic]) topicWise[topic] = { correct: 0, total: 0 };\r\n        topicWise[topic].total++;\r\n        if (isCorrect) topicWise[topic].correct++;\r\n      });\r\n    }\r\n\r\n    setScore(correctCount);\r\n    setMaxScore(total);\r\n\r\n    // Compute topic-wise accuracy %\r\n    const topicAcc = {};\r\n    for (const t in topicWise) {\r\n      topicAcc[t] = (\r\n        (topicWise[t].correct / topicWise[t].total) *\r\n        100\r\n      ).toFixed(1);\r\n    }\r\n    setTopicAccuracy(topicAcc);\r\n  }, [resultData]);\r\n\r\n  function arraysEqualIgnoringOrder(a, b) {\r\n    if (a.length !== b.length) return false;\r\n    const sortedA = [...a].sort();\r\n    const sortedB = [...b].sort();\r\n    return sortedA.every((val, idx) => val === sortedB[idx]);\r\n  }\r\n\r\n  if (!resultData) {\r\n    return <div className=\"container py-5\">Loading results...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <h2 className=\"mb-4\">ðŸ“Š Test Results</h2>\r\n\r\n      <ResultPanel score={score} maxScore={maxScore} />\r\n\r\n      <Analytics topicAccuracy={topicAccuracy} />\r\n\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={() => navigate(\"/\")}\r\n      >\r\n        ðŸ”„ Retake Test\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}