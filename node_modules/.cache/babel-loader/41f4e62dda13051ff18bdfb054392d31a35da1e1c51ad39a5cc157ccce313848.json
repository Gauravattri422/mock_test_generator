{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\mock-test-generator\\\\src\\\\components\\\\QuestionCard.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionCard({\n  question,\n  index,\n  total,\n  userAnswer,\n  setUserAnswer,\n  type\n}) {\n  function handleChange(e) {\n    const value = e.target.value;\n    if (type === \"single\") {\n      setUserAnswer([value]);\n    } else {\n      if (userAnswer.includes(value)) {\n        setUserAnswer(userAnswer.filter(ans => ans !== value));\n      } else {\n        setUserAnswer([...userAnswer, value]);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-4 shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Question \", index + 1, \" / \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: question.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: type === \"single\" ? \"radio\" : \"checkbox\",\n            id: `q${index}_opt${i}`,\n            name: `question_${index}`,\n            value: opt,\n            checked: userAnswer.includes(opt),\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `q${index}_opt${i}`,\n            children: opt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","QuestionCard","question","index","total","userAnswer","setUserAnswer","type","handleChange","e","value","target","includes","filter","ans","className","children","fileName","_jsxFileName","lineNumber","columnNumber","questionText","options","map","opt","i","id","name","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/gaura/mock-test-generator/src/components/QuestionCard.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function QuestionCard({\r\n  question,\r\n  index,\r\n  total,\r\n  userAnswer,\r\n  setUserAnswer,\r\n  type,\r\n}) {\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    if (type === \"single\") {\r\n      setUserAnswer([value]);\r\n    } else {\r\n      if (userAnswer.includes(value)) {\r\n        setUserAnswer(userAnswer.filter((ans) => ans !== value));\r\n      } else {\r\n        setUserAnswer([...userAnswer, value]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card mb-4 shadow-sm\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">\r\n          Question {index + 1} / {total}\r\n        </h5>\r\n        <p className=\"card-text\">{question.questionText}</p>\r\n        <form>\r\n          {question.options.map((opt, i) => (\r\n            <div className=\"form-check\" key={i}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type={type === \"single\" ? \"radio\" : \"checkbox\"}\r\n                id={`q${index}_opt${i}`}\r\n                name={`question_${index}`}\r\n                value={opt}\r\n                checked={userAnswer.includes(opt)}\r\n                onChange={handleChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor={`q${index}_opt${i}`}>\r\n                {opt}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,YAAYA,CAAC;EACnCC,QAAQ;EACRC,KAAK;EACLC,KAAK;EACLC,UAAU;EACVC,aAAa;EACbC;AACF,CAAC,EAAE;EACD,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B,IAAIH,IAAI,KAAK,QAAQ,EAAE;MACrBD,aAAa,CAAC,CAACI,KAAK,CAAC,CAAC;IACxB,CAAC,MAAM;MACL,IAAIL,UAAU,CAACO,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC9BJ,aAAa,CAACD,UAAU,CAACQ,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,KAAK,CAAC,CAAC;MAC1D,CAAC,MAAM;QACLJ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEK,KAAK,CAAC,CAAC;MACvC;IACF;EACF;EAEA,oBACEV,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClChB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhB,OAAA;QAAIe,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,WAChB,EAACb,KAAK,GAAG,CAAC,EAAC,KAAG,EAACC,KAAK;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACLpB,OAAA;QAAGe,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEd,QAAQ,CAACmB;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDpB,OAAA;QAAAgB,QAAA,EACGd,QAAQ,CAACoB,OAAO,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAC3BzB,OAAA;UAAKe,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBhB,OAAA;YACEe,SAAS,EAAC,kBAAkB;YAC5BR,IAAI,EAAEA,IAAI,KAAK,QAAQ,GAAG,OAAO,GAAG,UAAW;YAC/CmB,EAAE,EAAE,IAAIvB,KAAK,OAAOsB,CAAC,EAAG;YACxBE,IAAI,EAAE,YAAYxB,KAAK,EAAG;YAC1BO,KAAK,EAAEc,GAAI;YACXI,OAAO,EAAEvB,UAAU,CAACO,QAAQ,CAACY,GAAG,CAAE;YAClCK,QAAQ,EAAErB;UAAa;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFpB,OAAA;YAAOe,SAAS,EAAC,kBAAkB;YAACe,OAAO,EAAE,IAAI3B,KAAK,OAAOsB,CAAC,EAAG;YAAAT,QAAA,EAC9DQ;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAZuBK,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAa7B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACW,EAAA,GAjDuB9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}