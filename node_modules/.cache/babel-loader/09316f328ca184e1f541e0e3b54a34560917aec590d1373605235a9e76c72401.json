{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\mock-test-generator\\\\src\\\\components\\\\Analytics.jsx\";\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer, PieChart, Pie, Cell, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#28a745\", \"#dc3545\", \"#6c757d\"];\nexport default function Analytics({\n  topicAccuracy,\n  correct,\n  incorrect,\n  unattempted\n}) {\n  const barData = Object.entries(topicAccuracy).map(([topic, accuracy]) => ({\n    topic,\n    accuracy: parseFloat(accuracy)\n  }));\n  const pieData = [{\n    name: \"Correct\",\n    value: correct\n  }, {\n    name: \"Incorrect\",\n    value: incorrect\n  }, {\n    name: \"Unattempted\",\n    value: unattempted\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uD83D\\uDCC8 Topic-wise Accuracy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: barData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 0,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"accuracy\",\n          fill: \"#007bff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-5\",\n      children: \"\\uD83E\\uDDEE Overall Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 250,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: pieData,\n          cx: \"50%\",\n          cy: \"50%\",\n          labelLine: false,\n          label: ({\n            name,\n            percent\n          }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n          outerRadius: 80,\n          dataKey: \"value\",\n          children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","PieChart","Pie","Cell","Legend","jsxDEV","_jsxDEV","COLORS","Analytics","topicAccuracy","correct","incorrect","unattempted","barData","Object","entries","map","topic","accuracy","parseFloat","pieData","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","unit","fill","cx","cy","labelLine","label","percent","toFixed","outerRadius","entry","index","length","_c","$RefreshReg$"],"sources":["C:/Users/gaura/mock-test-generator/src/components/Analytics.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst COLORS = [\"#28a745\", \"#dc3545\", \"#6c757d\"];\r\n\r\nexport default function Analytics({ topicAccuracy, correct, incorrect, unattempted }) {\r\n  const barData = Object.entries(topicAccuracy).map(([topic, accuracy]) => ({\r\n    topic,\r\n    accuracy: parseFloat(accuracy),\r\n  }));\r\n\r\n  const pieData = [\r\n    { name: \"Correct\", value: correct },\r\n    { name: \"Incorrect\", value: incorrect },\r\n    { name: \"Unattempted\", value: unattempted },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h4>ðŸ“ˆ Topic-wise Accuracy</h4>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={barData} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"topic\" />\r\n          <YAxis unit=\"%\" />\r\n          <Tooltip />\r\n          <Bar dataKey=\"accuracy\" fill=\"#007bff\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h4 className=\"mt-5\">ðŸ§® Overall Performance</h4>\r\n      <ResponsiveContainer width=\"100%\" height={250}>\r\n        <PieChart>\r\n          <Pie\r\n            data={pieData}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n            outerRadius={80}\r\n            dataKey=\"value\"\r\n          >\r\n            {pieData.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Legend />\r\n          <Tooltip />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}