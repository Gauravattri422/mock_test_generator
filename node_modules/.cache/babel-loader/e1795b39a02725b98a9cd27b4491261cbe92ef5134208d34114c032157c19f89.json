{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\mock-test-generator\\\\src\\\\components\\\\QuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { MathJax } from \"better-react-mathjax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionCard({\n  question,\n  index,\n  total,\n  userAnswer,\n  setUserAnswer,\n  type\n}) {\n  _s();\n  const [selected, setSelected] = useState(userAnswer || []);\n  useEffect(() => {\n    setSelected(userAnswer || []);\n  }, [question, userAnswer]);\n  const handleOptionChange = option => {\n    if (type === \"single\") {\n      setSelected([option]);\n      setUserAnswer([option]);\n    } else {\n      const isSelected = selected.includes(option);\n      const newSelected = isSelected ? selected.filter(o => o !== option) : [...selected, option];\n      setSelected(newSelected);\n      setUserAnswer(newSelected);\n    }\n  };\n  if (!question || !question.questionText || !question.options) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: \"Invalid question format.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-sm mb-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Question \", index + 1, \" of \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MathJax, {\n      dynamic: true,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fw-bold mt-2\",\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: type === \"single\" ? \"radio\" : \"checkbox\",\n          name: `question-${index}`,\n          value: option,\n          checked: selected.includes(option),\n          onChange: () => handleOptionChange(option),\n          id: `q-${index}-opt-${i}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `q-${index}-opt-${i}`,\n          children: /*#__PURE__*/_jsxDEV(MathJax, {\n            dynamic: true,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionCard, \"YObVwHTcw1zeWh1PohsAm1wz/Qs=\");\n_c = QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useEffect","useState","MathJax","jsxDEV","_jsxDEV","QuestionCard","question","index","total","userAnswer","setUserAnswer","type","_s","selected","setSelected","handleOptionChange","option","isSelected","includes","newSelected","filter","o","questionText","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dynamic","map","i","name","value","checked","onChange","id","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/gaura/mock-test-generator/src/components/QuestionCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { MathJax } from \"better-react-mathjax\";\r\n\r\nexport default function QuestionCard({\r\n  question,\r\n  index,\r\n  total,\r\n  userAnswer,\r\n  setUserAnswer,\r\n  type,\r\n}) {\r\n  const [selected, setSelected] = useState(userAnswer || []);\r\n\r\n  useEffect(() => {\r\n    setSelected(userAnswer || []);\r\n  }, [question, userAnswer]);\r\n\r\n  const handleOptionChange = (option) => {\r\n    if (type === \"single\") {\r\n      setSelected([option]);\r\n      setUserAnswer([option]);\r\n    } else {\r\n      const isSelected = selected.includes(option);\r\n      const newSelected = isSelected\r\n        ? selected.filter((o) => o !== option)\r\n        : [...selected, option];\r\n      setSelected(newSelected);\r\n      setUserAnswer(newSelected);\r\n    }\r\n  };\r\n\r\n  if (!question || !question.questionText || !question.options) {\r\n    return <div className=\"alert alert-danger\">Invalid question format.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card shadow-sm mb-4 p-4\">\r\n      <h5>\r\n        Question {index + 1} of {total}\r\n      </h5>\r\n      <MathJax dynamic>\r\n        <p className=\"fw-bold mt-2\">{question.questionText}</p>\r\n      </MathJax>\r\n\r\n      <div className=\"mt-3\">\r\n        {question.options.map((option, i) => (\r\n          <div className=\"form-check mb-2\" key={i}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type={type === \"single\" ? \"radio\" : \"checkbox\"}\r\n              name={`question-${index}`}\r\n              value={option}\r\n              checked={selected.includes(option)}\r\n              onChange={() => handleOptionChange(option)}\r\n              id={`q-${index}-opt-${i}`}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={`q-${index}-opt-${i}`}>\r\n              <MathJax dynamic>{option}</MathJax>\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}